steps:
  # Build the Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "asia-northeast1-docker.pkg.dev/testing-baksara/graphql-api/graphql-api",
        ".",
      ]

  # Push the Docker image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "asia-northeast1-docker.pkg.dev/testing-baksara/graphql-api/graphql-api"]

  # Configure Docker for Artifact Registry using gcloud
  - name: "gcr.io/cloud-builders/gcloud"
    args: ["auth", "configure-docker", "asia-northeast1-docker.pkg.dev"]

  # Deploy to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "run",
        "deploy",
        "graphql-api",
        "--set-cloudsql-instances",
        "testing-baksara:asia-southeast2:baksara",
        "--image",
        "asia-northeast1-docker.pkg.dev/testing-baksara/graphql-api/graphql-api",
        "--platform",
        "managed",
        "--region",
        "asia-northeast1",
      ]

  # Get the connector's fully-qualified name
  # - name: 'gcr.io/cloud-builders/gcloud'
  #   args:
  #     [
  #       'compute',
  #       'networks',
  #       'vpc-access',
  #       'connectors',
  #       'describe',
  #       'projects/testing-baksara/locations/asia-southeast2/connectors/sql-connect-2',
  #       '--region',
  #       'asia-southeast2',
  #       '--format',
  #       'value(name)',
  #     ]
  #   id: 'get-connector-name'

  # # Update Cloud SQL instance to use Serverless VPC Access
  # - name: 'gcr.io/cloud-builders/gcloud'
  #   args:
  #     [
  #       'sql',
  #       'instances',
  #       'patch',
  #       'testing-baksara:asia-southeast2:baksara',
  #       '--vpc-connector',
  #       'projects/testing-baksara/locations/asia-southeast2/connectors/sql-connect-2',
  #     ]
  
